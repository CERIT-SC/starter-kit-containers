services:
  aai-proxy:
    image: nginx:latest
    depends_on:
      aai-mock:
        condition: service_healthy
    healthcheck:
      test: service nginx status || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    volumes:
      - ./configuration/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configuration/nginx/certs:/etc/nginx/certs
    restart: always
    ports:
      - 443:443
    networks:
      private:
      my-app-network:
        aliases:
          - aai.localhost

  aai-mock:
    image: cerit.io/cerit/aai:2024-08-24
    container_name: ls-aai-mock
    depends_on:
      aai-db:
        condition: service_healthy
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/8080' || exit 1
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 15s
    volumes:
      - ./configuration/aai-mock:/etc/lsaai-mock
    ports:
      - 8080:8080
    networks:
      - private
      - my-app-network

  aai-db:
    image: mysql/mysql-server:latest
    container_name: ls-aai-db
    environment:
      MYSQL_ROOT_PASSWORD: 'aaiPass'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: 'aai'
      MYSQL_USER: 'aai'
      MYSQL_PASSWORD: 'aaiPass'
    volumes:
      - ./scripts/aai-mock.sql:/docker-entrypoint-initdb.d/1.sql
      # remove this to disable persistent storage
      - aai-mysql:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - private
# Uncomment if you need to write visas into the broker - this is the storage for the broker
#broker-db:
#  image: mysql/mysql-server:latest
#  container_name: ls-broker-db
#  environment:
#    MYSQL_ROOT_PASSWORD: 'rootPass'
#    MYSQL_ROOT_HOST: '%'
#    MYSQL_DATABASE: 'broker'
#    MYSQL_USER: 'brokerUser'
#    MYSQL_PASSWORD: 'brokerPass'
#  volumes:
#    - ./scripts/ga4gh-broker.sql:/docker-entrypoint-initdb.d/1.sql
#  # remove this to disable persistent storage
#    - aai-mysql://var/lib/mysql"
#  ports:
#    - 3307:3306
#  networks:
#    - private
#

volumes:
  aai-mysql:

networks:
  private:
  my-app-network:
    external: true
